#
# Copyright (c) 2023, 2025 Contributors to the Eclipse Foundation.
# Copyright (c) 2010, 2018 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

internal.error=Internal Error: {0}
validator.invalid_value=Invalid value for {0} : {1}
validator.invalid_type=Invalid type for {0}. Expected {1} or subtype but got {2}
fileValidator.no_read=No read permission: {0}
fileValidator.no_write=No write permission: {0}
fileValidator.not_a_dir={0} is not a directory
portValidator.in_use=Port {0} is in use
domainConfig=domain config
keyFileNotCreated=Error creating keyfile
adminUserComment=# Domain User and Password - Do Not Delete Entry Above
serverPolicyNotCreated=Error creating server.policy
keyStoreNotCreated=Error creating key store {0}
trustStoreNotCreated=Error creating trust store {0}
masterPasswordFileNotCreated=Error creating master password file {0}
timerDbnNotCreated=Error creating timer database dbn file
timerWalNotCreated=Error creating timer database wal file
installRoot=install root
cannotDeleteJmsProviderInstance=Error deleting mq broker instance
masterPasswordFileNotRead=Error reading master password file {0}

keyStorePasswordNotChanged=Error changing keystore password for store {0}

s1asKeyPasswordNotChanged=Error changing password for default key with alias s1as for store {0}

passwordAliasPasswordNotChanged=Error changing password for password alias store {0}

couldNotValidateMasterPassword=Exception validating master password against store {0}

masterPasswordInvalid=Password entered is invalid
derbyEjbTimerDBNotCreated=The embedded EJB Timer Database could not be created, detailed message: {0}
noDerbyLog=The derby log file could not be read. No detailed information available.
nullArg=Null argument was provided.
serviceNameInvalid=Invalid name [{0}] for the service.
doesNotExist=The object [{0}] could not be found.
serviceTypeNotSet=Service type is not configured correctly.
serviceTemplateNotFound=Service template [{0}] does not exist, something wrong with setting environment like INSTALL_ROOT etc.
missingParamsInFile=The passwordfile that was specified as [{0}] does not contain the property [{1}] in required form. \
Rerun the command after adding [{1}=value] to this file on a separate line.
runtimeStatusToString={0} is {1}
fileNotFound=File {0} not found.
error=error
runtimeStatusToStringStopCluster.alreadyStopped=The clustered instance, {0}, was already stopped.
runtimeStatusToStringStopCluster.success=The clustered instance, {0}, was successfully stopped.
runtimeStatusToStringStopCluster.stoppedToRunning=This should be impossible.  The clustered instance, {0}, was stopped and now it is: {1}
runtimeStatusToStringStopCluster.error=The clustered instance, {0}, could not be stopped.  It was originally in this state: [{1}] and now it is in this state: [{2}].
runtimeStatusToStringStartCluster.alreadyStarted=The clustered instance, {0}, was already running.
runtimeStatusToStringStartCluster.success=The clustered instance, {0}, was successfully started.
runtimeStatusToStringStartCluster.startedToStopped=This should be impossible.  The clustered instance, {0}, was running and now it is: {1}
runtimeStatusToStringStartCluster.error=The clustered instance, {0}, could not be started.  It was originally in this state: [{1}] and now it is in this state: [{2}].

CertificateDN=Distinguished Name of the self-signed X.509 Server Certificate is:\n[{0}]

windows.services.passwordFileNotA=The password file you specified is not a file: {0}
windows.services.passwordFileNotReadable=The password file you specified is not readable: {0}
windows.services.noTargetDir=Can not create a directory for services in the domain: {0}
services.alreadyCreated=\n\nServices have already been created for this server.\nTry deleting the files first \
like so:\n         {1} {0}\nor -- use the --force option and they will be deleted for you automatically.\n
windows.services.install.bad=Error while trying to install GlassFish as a Windows Service.  \n\
The return value was: {0}.\nSTDERR: {1}\nSTDOUT: {2}
dryrun=\n********  Dry Run ********\nThe service was not really created, but it would have been successful.\n\
Run the command again without the --dry-run option to really run it.
WindowsServiceCreated=The Windows Service was created successfully.  It is ready to be started.  Here are the details:\n\
ID of the service: {0}\n\
Display Name of the service:{1}\n\
Server Directory: {2}\n\
Configuration file for Windows Services Wrapper: {3}\n\
The service can be controlled using the Windows Services Manager or you can use the\n\
Windows Services Wrapper instead:\n\
Start Command:  {4}  start\n\
Stop Command:   {4}  stop\n\
Restart Command:  {4}  restart\n\
Uninstall Command:  {4}  uninstall\n\
Install Command:  {4}  install\n\
Status Command: {4} status\n\
You can also verify that the service is installed (or not) with 'sc query state= all'\n\
windows.services.uninstall.good=Found the Windows Service and successfully uninstalled it.
noSuitableServiceImplementation=Sorry but there is no support yet for your \
Operating System.  Currently Linux and Windows are the supported platforms.
bad.server.dirs=Internal Error: Bad Server Dirs Argument.
noAsadminScript=Can not find the location of the administration client script.  It is supposed to be here: {0}
xmlfiledump=\nHere is the gnerated config file that would have been used (this is handy for debugging):\n
no_initd=There is no system folder for Services.  We were looking for: {0}
no_write_dir=You do not have permission to write to {0}.  Please re-run the command with root privileges.
no_rc=Can not determine your Services Configuration.  It must be non-standard because this directory: {0} doesn''t exist.\n\
Unfortunately we are unable to create services for this system.
no_rc2=Can not determine your Services Configuration.  It must be non-standard because no rc?.d directories were present\n\
in either /etc or /etc/init.d directories.  Unfortunately we are unable to create services for this system.
linux.services.uninstall.good=Found the Linux Service and successfully uninstalled it.
LinuxServiceCreated=\
The Service was created successfully. Here are the details:\n\
Name of the service:{0}\n\
Type of the service:{1}\n\
Configuration location of the service:{2}\n\
User account that will run the service: {3}\n\
You have created the service but you need to start it yourself.  \
Here are the most typical Linux commands of interest:\n\
\n\
* /etc/init.d/{4} start\n\
* /etc/init.d/{4} stop\n\
* /etc/init.d/{4} restart\n
# Do not translate PATH as it is a reserved operating system variable name
no_updater=Could not find the Ubuntu Services Updater program in your path.  The program is named {0}.  \n\
Please locate it and add it to your PATH.
cant_delete=Unable to delete this file: {0}.  Please delete it manually, or login \
with higher privileges, and run the command again.
too_many_links=Found too many link files that match.  To be safe we did NOT delete them.  \
Please delete them manually and/or consider \nchanging the name of the service so it \
does not clash.  Here are the link file names: \n{0}
ln_error=Error attempting to create a soft link with this command: {0}\nGet this Exception: {1}
no_delete_yet=delete-service is not implemented for this platform yet.
not_installed=The service is not installed.
cant_exec=Can not execute {0}.  Try getting your access privileges increased or login as root.
