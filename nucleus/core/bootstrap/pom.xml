<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2024 Contributors to the Eclipse Foundation.
    Copyright (c) 1997, 2021 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish.main.core</groupId>
        <artifactId>nucleus-core</artifactId>
        <version>7.0.22-SNAPSHOT</version>
    </parent>

    <artifactId>glassfish</artifactId>
    <packaging>glassfish-jar</packaging>

    <name>Appserver Core Bootstraping Classes</name>
    <description>Glassfish appserver boostraping classes</description>

    <developers>
        <developer>
            <id>dochez</id>
            <name>Jerome Dochez</name>
            <url>http://blogs.sun.com/dochez</url>
            <organization>Oracle, Inc.</organization>
            <roles>
                <role>lead</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>tmueller</id>
            <name>Tom Mueller</name>
            <organization>Oracle, Inc.</organization>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.main</groupId>
            <artifactId>glassfish-jul-extension</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-extras</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>osgi.core</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Although we package simple-glassfish-api bundle's content in glassfish.jar, in standalone mode, we have to create
            a launcher classloader that has the launching APIs and OSGi APIs in same level. SO, we need this jar to be part of distribution.
            Making it a compile scoped dependency forces this jar to be part of all distribution. -->
        <dependency>
            <groupId>org.glassfish.main.common</groupId>
            <artifactId>simple-glassfish-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.common</groupId>
            <artifactId>common-util</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish.main.common</groupId>
                    <artifactId>glassfish-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.annotations</groupId>
            <artifactId>logging-annotation-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.main</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathLayoutType>custom</classpathLayoutType>
                            <customClasspathLayout>${artifact.artifactId}.${artifact.extension}</customClasspathLayout>
                            <mainClass>com.sun.enterprise.glassfish.bootstrap.ASMain</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Bundle-Activator>com.sun.enterprise.glassfish.bootstrap.osgi.GlassFishMainActivator</Bundle-Activator>
                    </instructions>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-osgi-artifacts-for-tests</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <includeArtifactIds>org.apache.felix.main,simple-glassfish-api,glassfish-jul-extension</includeArtifactIds>
                            <outputDirectory>${project.build.directory}/test-osgi</outputDirectory>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
