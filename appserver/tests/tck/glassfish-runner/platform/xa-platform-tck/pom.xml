<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2023, 2024 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.glassfish</groupId>
        <artifactId>standalone-tck</artifactId>
        <version>11.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <groupId>jakarta</groupId>
    <artifactId>glassfish.xa-platform-tck</artifactId>
    <version>11.0.0</version>
    <packaging>jar</packaging>
    <properties>
        <arquillian.core.version>1.9.1.Final</arquillian.core.version>
        <connectionpoolid>cts-derby-pool</connectionpoolid>
        <db.delimiter>;</db.delimiter>

        <!--- derby properties -->
        <derby.dbName>derbyDB</derby.dbName>
        <derby.passwd>cts1</derby.passwd>
        <derby.port>1527</derby.port>
        <derby.server>localhost</derby.server>
        <derby.user>cts1</derby.user>

        <!-- glassfish properties -->
        <exec.asadmin>${glassfish.home}/glassfish/bin/asadmin</exec.asadmin>
        <glassfish.home>${project.build.directory}/glassfish7</glassfish.home>
        <glassfish.lib.dir>${glassfish.home}/glassfish/lib</glassfish.lib.dir>
        <javadb.lib>${glassfish.home}/javadb/lib</javadb.lib>
        <jakarta.tck.arquillian.version>11.0.0</jakarta.tck.arquillian.version>

        <!-- JDBC properties -->
        <jdbc.db>derby</jdbc.db>
        <jdbc.driver>org.apache.derby.jdbc.ClientDriver</jdbc.driver>
        <jdbc.driver.classes>${javadb.lib}/derbyclient.jar:${javadb.lib}/derbyshared.jar:${javadb.lib}/derbytools.jar</jdbc.driver.classes>
        <jdbc.maxpoolsize>64</jdbc.maxpoolsize>
        <jdbc.password>cts1</jdbc.password>
        <jdbc.steadypoolsize>32</jdbc.steadypoolsize>
        <jdbc.url>jdbc:derby://localhost:1527/derbyDB;create=true</jdbc.url>
        <jdbc.user>cts1</jdbc.user>

        <junit.jupiter.version>5.9.1</junit.jupiter.version>
        <rapassword1>cts1</rapassword1>
        <rauser1>cts1</rauser1>
        <sql.directory>./sql</sql.directory>
        <tck.artifactId>jakarta.tck.jdbc</tck.artifactId>
        <tck.version>11.0.0</tck.version>

        <!-- XA properties -->
        <xa.datasource.class>org.apache.derby.jdbc.ClientXADataSource</xa.datasource.class>
        <xa.maxpoolsize>64</xa.maxpoolsize>
        <xa.poolName>cts-derby-XA-pool</xa.poolName>
        <xa.properties>serverName=${derby.server}:portNumber=${derby.port}:user=${derby.user}:password=${derby.passwd}:DatabaseName=${derby.dbName}:connectionAttributes=";create\=true;"</xa.properties>
        <xa.restype>javax.sql.XADataSource</xa.restype>
        <xa.steadypoolsize>32</xa.steadypoolsize>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>common</artifactId>
            <version>${jakarta.tck.common.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>xa</artifactId>
            <version>11.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-test-spi</artifactId>
            <version>${arquillian.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <version>${arquillian.core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-appclient</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-javatest</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-lib</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>tck-porting-lib</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>org.omnifaces.arquillian</groupId>
            <artifactId>arquillian-glassfish-server-managed</artifactId>
            <version>1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>10.15.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbytools</artifactId>
            <version>10.15.2.0</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>1-unpack</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>${glassfish-artifact-id}</artifactId>
                                    <version>${glassfish.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>2-copy-lib</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>arquillian-protocol-lib</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                    <destFileName>arquillian-protocol-lib.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>common</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                    <destFileName>common.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>tck-porting-lib</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                    <destFileName>tck-porting-lib.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derbyclient</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                    <destFileName>derbyclient.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derbytools</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                    <destFileName>derbytools.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>arquillian-protocol-lib</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/protocol</outputDirectory>
                                    <destFileName>protocol.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>1-start-database</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>start-database</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <!-- common configuration shared by all executions -->
                <configuration>
                    <driver>org.apache.derby.jdbc.ClientDriver</driver>
                    <url>jdbc:derby://localhost:1527/derbyDB;create=true</url>
                    <username>CTS1</username>
                    <password>CTS1</password>
                    <autocommit>true</autocommit>
                    <delimiter>;</delimiter>
                    <onError>continue</onError>
                </configuration>
                <dependencies>
                    <!-- specify the dependent jdbc driver here -->
                    <dependency>
                        <groupId>org.apache.derby</groupId>
                        <artifactId>derbyclient</artifactId>
                        <version>10.15.2.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.derby</groupId>
                        <artifactId>derbytools</artifactId>
                        <version>10.15.2.0</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>sql-cli</id>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <sqlCommand>CREATE SCHEMA CTS1 AUTHORIZATION CTS1;</sqlCommand>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-resource-one</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>*.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>10-start-database</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>start-database</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>11-stop-domain</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>stop-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>12-start-domain</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>start-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>13-create-jvm-options</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-jvm-options</argument>
                                <argument>-Dwhitebox-tx-map=${rauser1}=${user}:-Dwhitebox-tx-param-map=${rauser1}=${user}:-Dwhitebox-notx-map=${rauser1}=${user}:-Dwhitebox-notx-param-map=${rauser1}=${user}:-Dwhitebox-xa-map=${rauser1}=${user}:-Dwhitebox-xa-param-map=${rauser1}=${user}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>18-create-xa-jdbc-pool</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-connection-pool</argument>
                                <argument>--restype</argument>
                                <argument>${xa.restype}</argument>
                                <argument>--datasourceclassname</argument>
                                <argument>${xa.datasource.class}</argument>
                                <argument>--property</argument>
                                <argument>${xa.properties}</argument>
                                <argument>--steadypoolsize</argument>
                                <argument>${xa.steadypoolsize}</argument>
                                <argument>--maxpoolsize</argument>
                                <argument>${xa.maxpoolsize}</argument>
                                <argument>${xa.poolName}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>19-create-jndi</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>${xa.poolName}</argument>
                                <argument>eis/JDBCwhitebox-xa</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>20-create-jndi</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>${xa.poolName}</argument>
                                <argument>eis/JDBCwhitebox-tx</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>21-create-jndi</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>${xa.poolName}</argument>
                                <argument>eis/JDBCwhitebox-notx</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>22-list-jdbc-connection-pools</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>list-jdbc-connection-pools</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>23-ping-connection-pool</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>ping-connection-pool</argument>
                                <argument>${xa.poolName}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>24-deploy-whitebox-tx-connector</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${project.basedir}/xa-connectors/whitebox/whitebox-tx.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>25-create-whitebox-tx-connector-pool</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-tx</argument>
                                <argument>--user</argument>
                                <argument>${admin.user}</argument>
                                <argument>--passwordfile</argument>
                                <argument>${password.file}</argument>
                                <argument>--property</argument>
                                <argument>user=cts1:password=cts1:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>whitebox-tx-pool</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>26-create-whitebox-tx-jndi</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>whitebox-tx-pool</argument>
                                <argument>eis/whitebox-tx</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>27-deploy-whitebox-xa-connector</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${project.basedir}/xa-connectors/whitebox/whitebox-xa.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>28-create-whitebox-xa-connector-pool</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-xa</argument>
                                <argument>--property</argument>
                                <argument>user=cts1:password=cts1:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>whitebox-xa-pool</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>29-create-whitebox-xa-jndi</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>whitebox-xa-pool</argument>
                                <argument>eis/whitebox-xa</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>30-deploy-whitebox-notx-connector</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${project.basedir}/xa-connectors/whitebox/whitebox-notx.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>31-create-whitebox-notx-connector-pool</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-notx</argument>
                                <argument>--property</argument>
                                <argument>user=cts1:password=cts1:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>whitebox-notx-pool</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>32-create-whitebox-notx-jndi</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>whitebox-notx-pool</argument>
                                <argument>eis/whitebox-notx</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>33-stop-domain</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${exec.asadmin}</executable>
                            <arguments>
                                <argument>stop-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>${glassfish-artifact-id}</artifactId>
                                    <version>${glassfish.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <id>xa-javatest-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <dependenciesToScan>jakarta.tck:xa</dependenciesToScan>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/javadb/lib/derbytools.jar</additionalClasspathElement>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/javadb/lib/derbyclient.jar</additionalClasspathElement>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/javadb/lib/derby.jar</additionalClasspathElement>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/glassfish-naming.jar</additionalClasspathElement>
                            </additionalClasspathElements>
                            <systemPropertyVariables>
                                <glassfish.home>${project.build.directory}/${glassfish.toplevel.dir}</glassfish.home>
                                <ts.home>${env.TS_HOME}</ts.home>
                                <project.basedir>${project.basedir}</project.basedir>
                                <arquillian.xml>arquillian.xml</arquillian.xml>
                            </systemPropertyVariables>
                            <includes>
                                <include>**/*Servlet*.*</include>
                                <include>**/*JSP*.*</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <id>xa-appclient-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <dependenciesToScan>jakarta.tck:xa</dependenciesToScan>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/javadb/lib/derbytools.jar</additionalClasspathElement>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/javadb/lib/derbyclient.jar</additionalClasspathElement>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/javadb/lib/derby.jar</additionalClasspathElement>
                                <additionalClasspathElement>${project.build.directory}/${glassfish.toplevel.dir}/glassfish/modules/glassfish-naming.jar</additionalClasspathElement>
                            </additionalClasspathElements>
                            <systemPropertyVariables>
                                <glassfish.home>${project.build.directory}/${glassfish.toplevel.dir}</glassfish.home>
                                <java.naming.factory.initial>com.sun.enterprise.naming.impl.SerialInitContextFactory</java.naming.factory.initial>
                                <ts.home>${env.TS_HOME}</ts.home>
                                <project.basedir>${project.basedir}</project.basedir>
                                <arquillian.xml>appclient-arquillian.xml</arquillian.xml>
                            </systemPropertyVariables>
                            <includes>
                                <include>**/*EJB*.*</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>full</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <glassfish-artifact-id>glassfish</glassfish-artifact-id>
            </properties>
        </profile>
        <profile>
            <id>web</id>
            <properties>
                <glassfish-artifact-id>web</glassfish-artifact-id>
            </properties>
        </profile>
    </profiles>
</project>
