#
# Copyright (c) 2010, 2018 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

InstanceReaderFilter.CantFindConfig=Can''t find the config element for the instance {0}
InstanceReaderFilter.UnknownException=Got an unknown error while parsing domain.xml: {0}
InstanceReaderFilter.ReparseNeeded=Doman.xml had to be parsed twice instead of \
once because the order of elements is non-optimal.  \n\
The optimal order is <clusters>...<<servers>...<configs>
time=Total time to parse domain.xml: {0}
dxpp.serverNotFound=Couldn''t find the server element for the instance: {0}
dxpp.configrefnotmatch=The instance, {0}, belongs to the cluster, {1}, but the config-ref''s don''t match.
dxpp.confignotfound=The config element, {1} for the instance, {0} was not found.

NoConfigFile={0} does not exist or is empty, will use backup
NoBackupFile={0} does not exist or is empty, cannot use backup
SystemPropertyUpgrade.Failure=Failure while upgrading config {0} system-property from v2.1.1 to 3.1"
BadEnv=Instance {0} from environment not found in domain.xml

GenericCrudCommand.invalid_type=Invalid annotated type {0} passed to InjectionResolver:getValue()
GenericCrudCommand.invocation_failure=Failure {0} while getting List<?> values from component;
GenericCrudCommand.nongeneric_type=The List type returned by {0} must be a generic type
GenericCrudCommand.wrong_type=The generic type {0} is not supported, only List<? extends ConfigBeanProxy> is"
GenericCrudCommand.introspection_failure=Failure {0} while instrospecting {1} to find all getters and setters
GenericCrudCommand.too_many_indexes=The metadata for this generic implementation has more than one index {0}
GenericCrudCommand.unamed_service=The service {0} is un-named, for generic command, the service name is the command name and must be provided
GenericCrudCommand.transactionException=Transaction exception {0} while injecting {1}
GenericCrudCommand.method_invocation_exception=Exception while invoking {0} method : {1}
GenericCrudCommand.annotation_not_found=Cannot find annotation {0} with value {1} on method {2}
GenericCreateCommand.configbean_not_found=The Config Bean {0} cannot be loaded by the generic command implementation : {1}
GenericCreateCommand.command_model_exception=Exception while creating the command model for the generic command {0} : {1}
GenericCreateCommand.target_object_not_found=The ConfigResolver {0} could not find the configuration object of type {1} where instances of {2} should be added
GenericCreateCommand.decorator_not_found=The CreationDecorator {0} could not be found in the habitat,is it annotated with @Service ?
GenericCreateCommand.deletion_decorator_not_found=The DeletionDecorator {0} could not be found in the habitat,is it annotated with @Service ?
GenericCreateCommand.transaction_exception=Configuration not added. {0}
GenericCreateCommand.already_existing_instance=A {0} instance with a "{1}" name already exists in the configuration
GenericDeleteCommand.transaction_exception=Configuration {0} not deleted. {1}
GenericDeleteCommand.target_object_not_found=The ConfigResolver {0} could not find the configuration object of type {1} where instances of {2} should be removed
TypeAndNameResolver.target_object_not_found=Cannot find a {0} with a name {1}
TypeResolver.target_object_not_found=Cannot find a single component instance of type {0}
TypeResolver.no_element_of_that_type=The Domain configuration does not have a sub-element of the type {0}
GenericListCommand.element_has_no_key=The element {0} has no key attribute
GenericListCommand.accesschecks=Exception while creating access checks for generic command {0}: {1}
GenericListCommand.invalidOutputOpts=Invalid output option. Choose from the following columns: {0}

DefaultConfigUpgrade.existingDefaultConfig=Existing default-config detected during upgrade. No need to create default-config.
DefaultConfigUpgrade.runningDefaultConfigUpgrade=default-config not detected during upgrade. Running DefaultConfigUpgrade to create default-config.
DefaultConfigUpgrade.cantFindInstallRoot=DefaultConfigUpgrade failed.  Can't find domain.xml template. Install root system property, {0}, is null.
## DefaultConfigUpgrade failed. Missing domain.xml template here {installRoot/lib/templates/domain.xml).
DefaultConfigUpgrade.cannotGetDomainXmlTemplate=DefaultConfigUpgrade failed. Cannot get default domain.xml from {0}.
DefaultConfigUpgrade.failure=Failure during upgrade - could not create default-config

# {0}=maximum number of substitutions, {1}=offending property value
TranslatedConfigView.badprop=System property substitution exceeded maximum of {0} in: {1}
# {0}=password being dealiased, {1}=exception error message
TranslatedConfigView.aliaserror=Error in dealiasing the password {0}: {1}
