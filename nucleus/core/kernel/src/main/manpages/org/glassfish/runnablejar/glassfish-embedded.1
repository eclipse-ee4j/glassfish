glassfish-embedded(1)         GlassFish Embedded          glassfish-embedded(1)

NAME
       glassfish-embedded - Start GlassFish Embedded as an executable JAR

SYNOPSIS
    java -jar glassfish-embedded.jar ${ARGUMENTS}

    or

    java -cp glassfish-embedded.jar org.glassfish.runnablejar.UberMain [args]

    (note that the "java -cp" option will require some "--add-opens" and 
      "--add-exports" Java arguments)

DESCRIPTION
    GlassFish Embedded can be executed as an executable JAR file. This starts
    the server and configures it according to the given arguments or
    configuration files.
    
    If executed without arguments or if no application is deployed, the server
    is started and waits for further admin commands in a loop. The server can 
    be terminated with the "exit" or "quit" commands or pressing Ctrl+C.
    
    If "glassfish.properties" file exists in the current directory, properties
    in this file are set as if the "--properties=glassfish.properties" argument
    was defined on the command line.

    If "autodeploy" directory exists in the current directory, files and 
    directories in that directory are deployed as applications on startup.

    If "glassfish-domain" directory exists in the current directory, it will be
    used as the domain directory unless specified explicitly with 
    "--domainDir=DIRECTORY"

    If "domain.xml" file exists in the current directory, it will be
    used as the domain configuration file unless specified explicitly with 
    "--domainConfigFile=FILE"

OPTIONS
${OPTIONS}

    Any argument that doesn't start with a hyphen (-), is treated as follows:

    - If it's a file or directory, it's deployed at startup as an application.
      If only application is deployed at startup, it's deployed under the root
      context '/'. Otherwise it's deployed under the context root derived from
      the name of the file or deployment descriptors.
    - In all other cases, the argument is executed as a GlassFish admin 
      command. Individual commands must be enclosed in quotes if they contain
      spaces. GlassFish admin commands are the same commands supported by 
      GlassFish Server's "asadmin" command line tool or by the "CommandRunner"
      Java class in GlassFish Simple Public API.

DEFAULT CONFIGURATION

    By default, GlassFish Embedded is started with the following configuration:

     - HTTP listener enabled on port 8080
     - HTTPS listener disabled

EXAMPLES
    Example 1: Run an application from command line
        On port 8080 and root context by default

        java -jar glassfish-embedded.jar app.war

    Example 2: Run an app on a different port

        java -jar glassfish-embedded.jar --httpPort=8090 app.war

    Example 3: Run a custom deploy command on startup
        Sets a custom root context. Custom commands need to be enclosed in 
        quotes if they contain spaces.

        java -jar glassfish-embedded.jar "deploy --contextroot=/app app.war"

    Example 4: Run 2 applications from command line
        Deploys applications on different context roots, based on the file name
        or info in the application descriptors.

        java -jar glassfish-embedded.jar app1.war app2.war

EXIT STATUS
    0
        GlassFish shut down successfully

    1
        GlassFish shut down with an error

SEE ALSO
    deploy(1), asadmin(1)

Jakarta EE 10                  13 Sep 2024                glassfish-embedded(1)