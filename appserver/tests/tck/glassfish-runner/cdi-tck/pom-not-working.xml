<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2022, 2024 Contributors to the Eclipse Foundation. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish</groupId>
        <artifactId>standalone-tck</artifactId>
        <version>11.0.0-SNAPSHOT</version>
    </parent>

    <groupId>org.glassfish</groupId>
    <artifactId>glassfish.cdi-tck</artifactId>
    <name>Jakarta CDI TCK Runner for Glassfish</name>
    <description>Aggregates dependencies and runs the CDI TCK (both standalone and on GlassFish)</description>

    <properties>
        <cdi.ee.tck.version>11.0.0-SNAPSHOT</cdi.ee.tck.version>
        <cdi.ee.tck.version>11.0.0-SNAPSHOT</cdi.ee.tck.version>

        <cdi.tck-4-1.version>4.1.0</cdi.tck-4-1.version>
        <glassfish.root>${project.build.directory}</glassfish.root>

        <!-- Note M6 still has some failures, future M7 passes all -->
        <glassfish.version>8.0.0-JDK17-M7</glassfish.version>

        <!-- This matches the htmlunit version in TCK -->
        <htmlunit.version>2.50.0</htmlunit.version>

        <maven.build.cache.enabled>false</maven.build.cache.enabled>

        <!-- set to tru to skip the core or ee TCK -->
        <skip.core.cdi.tck>false</skip.core.cdi.tck>
        <skip.ee.cdi.tck>false</skip.ee.cdi.tck>
        <!-- Weld uses 2 versions numbers. Some artefact use one version, other the second. -->
        <weld.version>5.1.2.Final</weld.version>
        <weld.version2>6.0.Final</weld.version2>
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>jakarta.enterprise</groupId>
                <artifactId>jakarta.enterprise.cdi-api</artifactId>
                <version>4.1.0</version>
            </dependency>

            <dependency>
                <groupId>org.jboss.shrinkwrap.descriptors</groupId>
                <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
                <version>2.0.0</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Jakarta EE APIs -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-el-api</artifactId>
            <version>4.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <version>6.0.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.faces</groupId>
            <artifactId>jakarta.faces-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.jms</groupId>
            <artifactId>jakarta.jms-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.transaction</groupId>
            <artifactId>jakarta.transaction-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.resource</groupId>
            <artifactId>jakarta.resource-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet.jsp</groupId>
            <artifactId>jakarta.servlet.jsp-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Weld (CDI implementation) -->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-api</artifactId>
            <version>${weld.version2}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-spi</artifactId>
            <version>${weld.version2}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
            <version>${weld.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-web</artifactId>
            <version>${weld.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
            The TCK API is quite small and mostly contains the org.jboss.cdi.tck.api.Configuration interface
            for programmatically configuring the TCK with things such as "org.jboss.cdi.tck.testDataSource" which
            are set below using a system property.
        -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-api</artifactId>
            <version>${cdi.tck-4-1.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
            The TCK Core implementation contains test helper code such as the Configuration implementation
            and the ArchiveBuilder, as well as a large amount of tests.
         -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-core-impl</artifactId>
            <version>${cdi.tck-4-1.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-core-impl</artifactId>
            <version>${cdi.tck-4-1.version}</version>
            <classifier>suite</classifier>
            <type>xml</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- The CDI EE TCK testsuite -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-ee-impl</artifactId>
            <version>${cdi.ee.tck.version}</version>
            <classifier>suite</classifier>
            <type>xml</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-ee-impl</artifactId>
            <version>${cdi.ee.tck.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.expressly</groupId>
            <artifactId>expressly</artifactId>
            <version>6.0.0-M1</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>${htmlunit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-lite-extension-translator</artifactId>
            <version>${weld.version}</version>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
            The Arquillian connector that starts GlassFish and deploys archives to it.
        -->
        <dependency>
            <groupId>org.omnifaces.arquillian</groupId>
            <artifactId>arquillian-glassfish-server-managed</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- Disable annotation processor for test sources -->
                    <testCompilerArgument>-proc:none</testCompilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependency/lib</outputDirectory>
                            <archive>
                                <manifest>
                                    <addClasspath>false</addClasspath>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Copy the TestNG suite file -->
                    <execution>
                        <id>copy-test-suites</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <artifactItems>
                                <!--
                                    Contains what becomes the tck-core-suite.xml; the TestNG suite file that dictates
                                    which tests from the TCK Web implementation are executed and which are excluded.
                                    Note that this file is essentially a superset of the suite file from the TCK Core,
                                    so we don't need that one separately here.
                                -->
                                <artifactItem>
                                    <groupId>jakarta.enterprise</groupId>
                                    <artifactId>cdi-tck-core-impl</artifactId>
                                    <version>${cdi.tck-4-1.version}</version>
                                    <type>xml</type>
                                    <classifier>suite</classifier>
                                    <overWrite>false</overWrite>
                                    <destFileName>tck-core-suite.xml</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>cdi-tck-ee-impl</artifactId>
                                    <version>${cdi.ee.tck.version}</version>
                                    <type>xml</type>
                                    <classifier>suite</classifier>
                                    <overWrite>false</overWrite>
                                    <destFileName>tck-ee-suite.xml</destFileName>
                                </artifactItem>

                            </artifactItems>
                            <outputDirectory>target/suites</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>

                    <!-- Install a jar with a few amount of test classes, for which some of the tests are looking -->
                    <execution>
                        <id>install-cdi-tck-ext-lib</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.enterprise</groupId>
                                    <artifactId>cdi-tck-ext-lib</artifactId>
                                    <version>${cdi.tck-4-1.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${glassfish.root}/glassfish8/glassfish/domains/domain1/lib/applibs</outputDirectory>
                                    <destFileName>cdi-tck-ext-lib.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>

                    <execution>
                        <id>unpack-glassfish</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <markersDirectory>${glassfish.root}/dependency-maven-plugin-markers</markersDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>${glassfish-artifact-id}</artifactId>
                                    <version>${glassfish.version}</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${glassfish.root}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.5.2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-testng</artifactId>
                        <version>3.5.2</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>run core tck</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <skipITs>${skip.core.cdi.tck}</skipITs>
                            <argLine>-Xmx768m</argLine>
                            <!-- Surefire / TestNG Properties -->
                            <!-- The suite, the exclude and the test dependencies together determine which tests are being run -->
                            <suiteXmlFiles>
                                <suiteXmlFile>target/suites/tck-core-suite.xml</suiteXmlFile>
                            </suiteXmlFiles>
                            <excludedGroups>${excluded.groups}</excludedGroups>
                            <dependenciesToScan>
                                <dependency>jakarta.enterprise:cdi-tck-core-impl</dependency>
                            </dependenciesToScan>
                            <properties>
                                <property>
                                    <name>surefire.testng.verbose</name>
                                    <value>1</value>
                                </property>
                            </properties>
                            <forkCount>1</forkCount>
                            <reuseForks>true</reuseForks>
                            <!-- System Properties -->
                            <systemPropertyVariables>
                                <glassfish.home>${glassfish.root}/glassfish8</glassfish.home>
                                <glassfish.enableDerby>true</glassfish.enableDerby>
                                <glassfish.maxHeapSize>2048m</glassfish.maxHeapSize>
                                <glassfish.enableAssertions>:org.jboss.cdi.tck...</glassfish.enableAssertions>
                                <glassfish.systemProperties>cdiTckExcludeDummy=true
                                    glassfish.servlet.loadAllOnStartup=true</glassfish.systemProperties>
                                <glassfish.postBootCommands>create-jms-resource --restype jakarta.jms.Queue --property Name=queue_test queue_test
                                    create-jms-resource --restype jakarta.jms.Topic --property Name=topic_test topic_test
                                    set configs.config.server-config.cdi-service.enable-implicit-cdi=true
                                    create-file-user --groups student --passwordfile ${project.build.directory}/test-classes/password.txt student
                                    create-file-user --groups printer --passwordfile ${project.build.directory}/test-classes/password.txt printer
                                    create-file-user --groups student:alarm --passwordfile ${project.build.directory}/test-classes/password.txt alarm</glassfish.postBootCommands>
                                <libPath>${project.build.outputDirectory}</libPath>
                                <org.jboss.cdi.tck.libraryDirectory>${project.build.directory}/dependency/lib</org.jboss.cdi.tck.libraryDirectory>
                                <debugMode>true</debugMode>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>

                    <execution>
                        <id>run ee tck</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <skipITs>${skip.ee.cdi.tck}</skipITs>
                            <argLine>-Xmx768m</argLine>
                            <!-- Surefire / TestNG Properties -->
                            <!-- The suite, the exclude and the test dependencies together determine which tests are being run -->
                            <suiteXmlFiles>
                                <suiteXmlFile>target/suites/tck-ee-suite.xml</suiteXmlFile>
                            </suiteXmlFiles>
                            <excludedGroups>${excluded.groups}</excludedGroups>
                            <dependenciesToScan>
                                <dependency>jakarta.tck:cdi-tck-ee-impl</dependency>
                            </dependenciesToScan>
                            <properties>
                                <property>
                                    <name>surefire.testng.verbose</name>
                                    <value>1</value>
                                </property>
                            </properties>
                            <forkCount>1</forkCount>
                            <reuseForks>true</reuseForks>
                            <!-- System Properties -->
                            <systemPropertyVariables>
                                <glassfish.home>${glassfish.root}/glassfish8</glassfish.home>
                                <glassfish.enableDerby>true</glassfish.enableDerby>
                                <glassfish.maxHeapSize>2048m</glassfish.maxHeapSize>
                                <glassfish.enableAssertions>:org.jboss.cdi.tck...</glassfish.enableAssertions>
                                <glassfish.systemProperties>cdiTckExcludeDummy=true
                                    glassfish.servlet.loadAllOnStartup=true</glassfish.systemProperties>
                                <glassfish.postBootCommands>create-jms-resource --restype jakarta.jms.Queue --property Name=queue_test queue_test
                                    create-jms-resource --restype jakarta.jms.Topic --property Name=topic_test topic_test
                                    set configs.config.server-config.cdi-service.enable-implicit-cdi=true
                                    create-file-user --groups student --passwordfile ${project.build.directory}/test-classes/password.txt student
                                    create-file-user --groups printer --passwordfile ${project.build.directory}/test-classes/password.txt printer
                                    create-file-user --groups student:alarm --passwordfile ${project.build.directory}/test-classes/password.txt alarm</glassfish.postBootCommands>
                                <libPath>${project.build.outputDirectory}</libPath>
                                <org.jboss.cdi.tck.libraryDirectory>${project.build.directory}/dependency/lib</org.jboss.cdi.tck.libraryDirectory>
                                <debugMode>true</debugMode>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <reportsDirectories>${project.build.directory}/failsafe-reports/junitreports</reportsDirectories>
                    <outputDirectory>${project.build.directory}/surefire-reports</outputDirectory>
                    <outputName>test-report</outputName>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-test-report</id>
                        <goals>
                            <goal>report-only</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>full</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <excluded.groups>se</excluded.groups>
                <glassfish-artifact-id>glassfish</glassfish-artifact-id>
            </properties>
        </profile>
        <profile>
            <id>web</id>
            <properties>
                <excluded.groups>javaee-full,se</excluded.groups>
                <glassfish-artifact-id>web</glassfish-artifact-id>
            </properties>
        </profile>
    </profiles>

</project>
