<?xml version="1.0" encoding="UTF-8"?>
<!--

  Copyright (c) 2021 Contributors to the Eclipse Foundation
    Copyright (c) 1997, 2021 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish.main.persistence.cmp</groupId>
        <artifactId>cmp</artifactId>
        <version>7.0.22-SNAPSHOT</version>
    </parent>

    <artifactId>cmp-support-ejb</artifactId>
    <packaging>glassfish-jar</packaging>

    <name>support ejb module for cmp</name>

    <developers>
        <developer>
            <id>mm110999</id>
            <name>Mitesh Meswani</name>
            <organization>Oracle, Inc.</organization>
            <roles>
                <role>developer</role>
                <role>lead</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <!-- We don't need it here and it would fail -->
        <glassfish.generate-injectors.skip>true</glassfish.generate-injectors.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.main.persistence.cmp</groupId>
            <artifactId>cmp-support-sqlstore</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.persistence.cmp</groupId>
            <artifactId>cmp-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.persistence.cmp</groupId>
            <artifactId>cmp-ejb-mapping</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.persistence.cmp</groupId>
            <artifactId>cmp-enhancer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.ejb</groupId>
            <artifactId>ejb-container</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.deployment</groupId>
            <artifactId>deployment-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.common</groupId>
            <artifactId>common-util</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.external</groupId>
            <artifactId>antlr</artifactId>
            <version>${antlr.version}</version>
        </dependency>
        <dependency><!-- We depend on repackaged antlr, but antlr-maven-plugin checks for this dependency to be present -->
            <groupId>antlr</groupId>
            <artifactId>antlr</artifactId>
            <optional>true</optional>
            <!-- This ensures that antlr:antlr does not get packaged -->
        </dependency>
        <dependency>
            <groupId>org.glassfish.external</groupId>
            <artifactId>schema2beans</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.omnifaces</groupId>
                <artifactId>antlr-maven-plugin</artifactId>
                <configuration>
                    <grammars>EJBQL.g, JDOQLCodeGeneration.g, Semantic.g</grammars>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <!--
                        com.sun.jdo.spi.persistence.support.ejb.cmp and com.sun.jdo.spi.persistence.support.ejb.ejbc
                        are exported because classes from these packages need to be visible to generated
                        *ConcreteImpl classes.

                        com.sun.jdo.spi.persistence.support.ejb.codegen.CMPDeployerImpl is referred from EJBDeployer.
                        However, the package need not be exported because the class is looked up through habitat
                        which uses bundle.loadClass() bypassing OSGI com.sun.jdo.spi.persistence.support.ejb.ejbqlc
                        is needed by verifier.
                        -->
                        <Export-Package>
                            com.sun.jdo.spi.persistence.support.ejb.cmp,
                            com.sun.jdo.spi.persistence.support.ejb.ejbc,
                            com.sun.jdo.spi.persistence.support.ejb.ejbqlc
                        </Export-Package>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
