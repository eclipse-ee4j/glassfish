#
# Copyright (c) 2025 Contributors to the Eclipse Foundation.
# Copyright (c) 2010, 2018 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

cantResolveIpAddress=Can't find the IP address for the hostname: {0}
cantdelete=Cannot delete temporary file {0}.
AgentPortInUse=Node agent port {0} is in use.
tooManyNodes=More than one node in directory {0}. Please specify --node.
cantCreateNodeDirChild=Error attempting to create this node directory: {0}
cantGetHostName=Got an Exception attempting to get this computer''s host name: {0}
noInstallDirPath=Can''t find the GlassFish installation directory path.
Agent.noInstallDir=Can''t find the GlassFish installation directory.  I was looking at this path: {0}
ConfigClusterConflict=Can only specify one of --cluster or --config
lbenabledNotForStandaloneInstance=The lbenabled option is not supported for standalone instances.
Instance.badNodeDir=Node directory {0} does not exist or is not a directory
Instance.badInstanceDir=Server instance directory {0} does not exist or is not a directory
Instance.invalidAgentPort=Invalid agentport {0}. Specify a valid agentport between 1 and 65535.
Instance.noInstanceDirs=No server instances in directory {0}
Instance.tooManyInstanceDirs=More than one server instance in directory {0}
Instance.badInstanceName=You must supply the instance name
Instance.cantReadDasProperties=Can''t read {0}
Instance.cantWriteProperties=Can''t write {0}: {1}
Instance.dasPropertyComment=Domain Administration Server Connection Properties
Instance.nodeagentPropertiesComment=Node Agent Connection Properties
Instance.unknownHost=Could not determine host.  Create hostname directory as nodes/localhost.
Instance.nosync=Skipping synchronization with DAS.
Instance.nodomainxml=CLI810 Synchronization with DAS failed and no local domain.xml,\ncan't start instance.
Instance.syncFailed=Warning: Synchronization with DAS failed, continuing startup...
Instance.fullsync=Removing all cached state for instance {0}.
Instance.rendezvousAttempt=Attempting to rendezvous with DAS on {0}:{1}
Instance.rendezvousAlready={0} is already registered on DAS.
Instance.rendezvousFailed=Failed to rendezvous with DAS on {0}:{1}. \
Please check if this server is running, that the host and port \
are correct, and that this server is configured to allow remote access.
#Instance.rendezvousSuccess {0} hostname that the DAS is running on, {1} Admin port of that DAS
Instance.rendezvousSuccess=Rendezvoused with DAS on {0}:{1}.
#Instance.oldDasProperties {0}=full path filename of das.properties, {1}=the port number in that file {2}=the new admin port number that will replace it
Instance.oldDasProperties=The das.properties file at {0}\nis probably from a previous release but uses the standard port {1},\nwill update it to use port {2} - check that this is correct
Instance.oldDasPropertiesWrong=The das.properties file at {0}\nis probably from a previous release and uses non-standard port {1},\nwill update it to use port {2} - this is probably wrong
Instance.oldDasPropertiesPrompt=The das.properties file at {0}\nis probably from a previous release and uses non-standard port {1}\nEnter DAS admin port number [default:{2}] >
Instance.dasPropertiesUpdateFailed=CLI811 Warning: failed to update das.properties file
Instance.badProtocol=CLI812 das.properties file at {0}\nspecifies an unknown protocol: {1}
Instance.reenterPort=Bad port number, reenter DAS admin port number [default:{0}] >
Instance.existingDasPropertiesWarning=Using DAS host {0} and port {1} from existing das.properties for node\n\
{2}. To use a different DAS, create a new node using create-node-ssh or\n\
create-node-config. Create the instance with the new node and correct\n\
host and port:\n\
asadmin --host das_host --port das_port create-local-instance --node node_name instance_name.
Instance.DasHostUnknown=The DAS hostname, {0}, is not known to instance host {1}. \
    This could be because the DAS host is known by a different name on {1} \
    or because the DAS hostname needs to be fully qualified with a domain name. \
    To correct this make sure that the system the DAS is running on can \
    identify itself with a fully qualified name (on Unix systems this is \
    often done by adding a fully qualified hostname in /etc/hosts). If the \
    DAS host is known by a different name then you need to change the \
    DAS admin HTTP listener address.
Instance.DasHostUnreachable=Could not contact the DAS running at {0}:{1}. \
    This could be because a firewall is blocking the connection back \
    to the DAS or because the DAS host is known by a different name on \
    the instance host {2}. To change the hostname that the DAS uses to identify \
    itself please update the DAS admin HTTP listener address.
Instance.DasHostInvalid=DAS host {0} does not match DAS host used by node {1}.
Instance.DasPortInvalid=DAS port {0} does not match DAS port used by node {1}.
Instance.DasIsSecureInvalid=DAS secure flag of {0} does not match DAS secure flag used by node {1}.
Instance.DasConfig=Node {0} is configured to connect to DAS on {1}:{2} with secure = {3}.
create.local.instance.usagetext=create-local-instance\n\t[--config <config> | --cluster <cluster>]\n\t[--lbenabled[=<lbenabled>]]\n\t[--systemproperties <systemproperties>] [--portbase <portbase>]\n\t[--checkports[=<checkports(default:true)>]]\n\t[--savemasterpassword[=<savemasterpassword(default:false)>]]\n\t[--nodedir <nodedir>] [--node <node>]\n\t[-?|--help[=<help(default:false)>]] instance_name
Instance.alreadyExists=A Server instance with a "{0}" name already exists in the configuration
masterPasswordFileNotCreated=Error creating master password file {0}
fileNotFound=File {0} not found.
MasterPassword=Enter the master password
MasterPasswordAgain=Enter the master password again
masterPasswordIncorrect=Incorrect master password.  Master password not saved.
Keystore.not.encrypted=Error in encrypting the keystore
Instance.installdir.mismatch=Attribute mismatch for node {0}: the value for the installdir attribute from the command ({1}) does not match the value in the DAS configuration ({2})
Instance.installdir.null=Attribute null for installdir on node {0}: command value is: {1}, node value is: {2}
Instance.duplicateInstanceDir=Server instance {0} is trying to use the same directory as instance {1}
###########
StopInstance.noInstanceNameAllowed=No instance name allowed with --host option.
StopInstance.instanceNotRunning=CLI1306 Warning - server instance is not running.
Instance.noSuchInstance=CLI1307 Warning - no server instance found with that name.
StopInstance.waitForDeath=Waiting for the instance to stop
## SynchronizeInstanceCommand
Sync.noDASConfigured=CLI800 das.properties file is missing, expected to find it here: {0}
Sync.alreadySynced=CLI801 Instance is already synchronized
Sync.dirFailed=CLI802 Synchronization failed for directory {0}, caused by:\n  {1}
Sync.failed=CLI803 Failed to synchronize with DAS on host {0}, port {1}
Sync.cantCreateSyncState=Warning: Can''t create synchronization state file: {0}
Sync.cantDeleteSyncState=Warning: Can''t delete synchronization state file: {0}
Sync.cantCreateDirectory=Warning: Can''t create directory: {0}
Sync.cantSetModTime=Warning: Can''t set last modified time: {0}
Sync.cantDeleteTempFile=Warning: Can''t delete temporary file: {0}
Sync.fullRequired=Previous synchronization failed at {0}\nWill perform full synchronization.
Sync.connectFailed=Failed to connect to DAS during synchronization, caused by: {0}
## DeleteLocalInstanceCommand
DeleteInstance.running=The instance is running.  Stop it and then re-run the command.
DeleteInstance.noInstanceName=You must specify an instance.
DeleteInstance.badWhack=Unable to delete the instance directory: {0}  The directory still exists after trying to delete it.
DeleteInstance.badWhackWithException=Unable to delete the instance directory: {0}.  \n\
This IOException was thrown: {1) \n** STACK TRACE **\n{2}
DeleteInstance.remoteError=Failed to connect to DAS on {0}:{1}.
DeleteInstance.noWhack=The instance directory does not exist: {0}
DeleteInstance.noInstance=The instance does not exist on this machine.
Config.badConfigNames=You must specify a source and destination config


restart.instanceNotRunning=Server is not running, will attempt to start it...
restart=Restarting Instance...
restart.notRestartable=The server reports that it is not restartable.  \n\
This usually means that the password file that was originally used to start the server \
has been deleted or is not readable now.\n\
Please stop and then start the server - or fix the password file.
restartChangeDebug=Restarting Instance and explicitly setting debug to {0}...
#ImportSyncBundleCommand
noFile=File {0} does not exist.
import.sync.bundle.extractBundleFailed=Could not extract contents from bundle\n{0}\nto\n{1}.
import.sync.bundle.inboundPayloadFailed=Could not read bundle\n{0}\n{1}.
import.sync.bundle.completeRegistrationFailed=DAS is offline. Could not set rendezvousOccurred property. \
Use the set command to set rendezvousOccurred property to true:\nset {0}.
import.sync.bundle.backupInstanceDirFailed=Could not rename existing directory\n{0}\nto\n{1}.
import.sync.bundle.deletedInstanceDir=Deleted existing directory:\n{0}
import.sync.bundle.closeStreamFailed=Could not close stream on file\n{0}\n{1}
import.sync.bundle.invalidInstance=Instance {0} does not exist.
import.sync.bundle.domainXmlNotFound=Could not find domain.xml in {0}.
import.sync.bundle.createDirectoryFailed=Could not create directory {0}.
import.sync.bundle.restoreInstanceDirFailed=Could not rename directory\n{0}\nto\n{1}.

#SetupSshKey
KeySetupFailed=SSH key setup failed: {0}
SSHPasswordPrompt=Enter remote password for {0}@{1}>
SSHPasswordNotFound=Non-interactive mode and SSH password not found in password file.
SSHPassphrasePrompt=Key {0} is encrypted\nEnter key passphrase>
GenerateKeyPairPrompt=SSH key not found for user {0}\nWould you like to generate a SSH key pair (without a key passphrase) for {0} to access {1}? [y/n]:
SSHAlreadySetup=SSH public key authentication is already configured for {0}@{1}
ConnFailed=Connection verification failed.
#DomainMasterPasswordPrompt {0}=the name of the domain
DomainMasterPasswordPrompt=Password is aliased. To obtain the real password, enter master password for {0}''s key store>
GetPasswordFailure=Failed to get the password from {0}''s keystore.
PasswordAuthFailure=Failed to authenticate using the aliased password stored in {0}''s keystore.

StopInstance.nopidprev=Can not find the process ID of the server.  It is supposed to be here: {0}.  Unable to kill the process.
StopInstance.pidprevreaderror=Error trying to read the Process ID from {0}: {1}
CreateLocalInstance.errSetLastMod=Attempt to set lastModified date for {0} failed; no further information is available

#change-master-password-node
instance.is.running=Server {0} is running. You need to stop the instance before the master-password can be changed.
## change-master-password-node
current.mp=Enter the current master password>
no.console=Not connected to console, giving up.
incorrect.mp=Incorrect current master password. You will not be able to change it.
incorrect.old.mp=Incorrect old master password. You will not be able to change it.
new.mp=Enter the new master password
new.mp.again=Enter the new master password again
old.mp=Enter the old master password>
bad.node.dir=Node {0} does not exist.
dry_run_msg=Dump of JVM Invocation line that would be used to launch:
remote.install.dir.already.gone=The remote directory ({0}) does not exist.  \
Nothing to delete.
remote.install.dir.cant.delete=Unable to delete the remote directory: {0}.  \
Please delete it manually.
install.dir.exists=The remote installation directory, {0}, already exists.  Use the --force option to overwrite it.
install.node.nolocal=install-node-dcom only operates on remote hosts.  {0} is this computer.
#####
##### vld
#####
vld.windows.only=This command is exclusively for Windows computers.
vld.missing.dlls=This command runs a native Windows program that requires other files to run.  \n\
Here are the missing file(s):\n{0}
vld.badtempdir=The Java-provided temp dir (java.io.tmpdir), {0}, is not a directory.
vld.app.deleted=This is unusual.  The app, {0}, already existed.  It was deleted with no problem.
vld.not.interactive=This command can only run in interactive mode.  \n\
Please make sure you have the interactive flag set to true.  See '--help' for details\n\
The other option is to use the --force option
vld.noconsole=This command can only be run from a console.  Please try again with a console attached.
vld.no=You chose to not run the command.
internal.error=Internal Error: {0}
