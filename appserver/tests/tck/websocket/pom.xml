<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2021, 2024 Contributors to the Eclipse Foundation. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish.main.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>7.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>glassfish-external-tck-websocket</artifactId>
    <packaging>pom</packaging>

    <name>TCK: websocket</name>

    <properties>
        <ant.home>${project.build.directory}/apache-ant-${ant.version}</ant.home>
        <ant.zip.url>https://archive.apache.org/dist/ant/binaries/apache-ant-${ant.version}-bin.zip</ant.zip.url>

        <tck.home>${project.build.directory}/websocket-tck</tck.home>
        <tck.tests.home>${tck.home}/src/com/sun/ts/tests/websocket</tck.tests.home>

        <jacoco.includes>org/glassfish/**\:com/sun/enterprise/**</jacoco.includes>

        <port.admin>14848</port.admin>
        <port.derby>11527</port.derby>
        <port.http>18080</port.http>
        <port.https>18181</port.https>
        <port.jms>17676</port.jms>
        <port.jmx>18686</port.jmx>
        <port.orb>13700</port.orb>
        <port.orb.mutual>13920</port.orb.mutual>
        <port.orb.ssl>13820</port.orb.ssl>
        <port.harness.log>12000</port.harness.log>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.main.distributions</groupId>
            <artifactId>glassfish</artifactId>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.tests.tck</groupId>
            <artifactId>jakarta-websocket-tck</artifactId>
            <version>${project.version}</version>
            <type>zip</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.github.download-maven-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-ant</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <url>${ant.zip.url}</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <skip>${skipITs}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>unpack-glassfish</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>glassfish</includeArtifactIds>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-tck</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>jakarta-websocket-tck</includeArtifactIds>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant</artifactId>
                        <version>${ant.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
                <configuration>
                    <skip>${skipITs}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-tck-and-glassfish</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                                         classpathref="maven.plugin.classpath" />

                                <macrodef name="tck-property-update">
                                    <attribute name="key" />
                                    <attribute name="value" />
                                    <sequential>
                                      <replaceregexp byline="true"
                                        file="${tck.home}/bin/ts.jte"
                                        match="@{key}=.*"
                                        replace="@{key}=@{value}" />
                                    </sequential>
                                </macrodef>

                                <tck-property-update key="web.home" value="${glassfish.home}/glassfish"/>
                                <tck-property-update key="webServerPort" value="${port.http}"/>
                                <tck-property-update key="webServerHost" value="localhost"/>

                                <tck-property-update key="impl.vi" value="glassfish"/>
                                <tck-property-update key="websocket.api" value="${web.home}/modules/jakarta.websocket-api.jar${pathsep}${web.home}/modules/jakarta.websocket-client-api.jar${pathsep}${web.home}/modules/jakarta.servlet-api.jar${pathsep}${web.home}/modules/jakarta.enterprise.cdi-api.jar"/>

                                <tck-property-update key="report.dir" value="${tck.home}/websocketreport/websocket"/>
                                <tck-property-update key="work.dir" value="${tck.home}/websocketwork/websocket"/>

                                <tck-property-update key="ws_wait" value="50000000" if:set="glassfish.suspend"/>

                                <replace file="${tck.home}/bin/ts.jte">
                                  <replacetoken><![CDATA[-XX\\\:MaxPermSize=512m:]]></replacetoken>
                                  <replacevalue><![CDATA[]]></replacevalue>
                                </replace>

                                <limit maxwait="60">
                                    <exec executable="${glassfish.asadmin}" dir="${glassfish.home}/glassfish/bin">
                                        <arg value="delete-domain"/>
                                        <arg value="domain1" />
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>
                                    <exec executable="${glassfish.asadmin}" dir="${glassfish.home}/glassfish/bin" failonerror="true">
                                        <arg value="create-domain"/>
                                        <arg value="--domainproperties=domain.adminPort=${port.admin}:domain.instancePort=${port.http}:http.ssl.port=${port.https}:jms.port=${port.jms}:domain.jmxPort=${port.jmx}:orb.listener.port=${port.orb}:orb.ssl.port=${port.orb.ssl}:orb.mutualauth.port=${port.orb.mutual}" />
                                        <arg value="--user=admin" />
                                        <arg value="--nopassword" />
                                        <arg value="domain1" />
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>
                                    <exec executable="${glassfish.asadmin}" dir="${glassfish.home}/glassfish/bin" failonerror="true">
                                        <arg value="start-domain"/>
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>

                                    <if>
                                        <isset property="jacoco.version" />
                                        <then>
                                            <exec executable="${glassfish.asadmin}" dir="${glassfish.home}/glassfish/bin" failonerror="true">
                                                <arg value="create-jvm-options" />
                                                <arg value="--port=${port.admin}" />
                                                <arg value="&quot;-javaagent\:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.build.directory}/jacoco-it.exec,includes=${jacoco.includes}&quot;" />
                                                <env key="AS_JAVA" value="${java.home}"/>
                                            </exec>
                                        </then>
                                    </if>

                                    <exec executable="${glassfish.asadmin}" dir="${glassfish.home}/glassfish/bin" failonerror="true">
                                        <arg value="stop-domain"/>
                                        <arg value="domain1"/>
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>
                                </limit>

                                <concat destfile="${glassfish.home}/glassfish/domains/domain1/config/server.policy" append="true">
                                    <filelist dir="${tck.home}/bin" files="server_policy.append"/>
                                </concat>

                                <mkdir dir="${tck.home}/websocketreport"/>
                                <mkdir dir="${tck.home}/websocketreport/websocket"/>

                                <replace file="${tck.home}/bin/xml/ts.top.import.xml">
                                  <replacetoken><![CDATA[<jvmarg value="-Xmx512m"/>]]></replacetoken>
                                  <replacevalue><![CDATA[<jvmarg value="-Xmx512m"/>
                                <jvmarg value="-Djavatest.security.noSecurityManager=true"/>]]></replacevalue>
                                </replace>

                                <replace file="${tck.home}/bin/xml/ts.top.import.xml" if:set="tck.suspend" >
                                  <replacetoken><![CDATA[<jvmarg value="-Xmx512m"/>]]></replacetoken>
                                  <replacevalue><![CDATA[<jvmarg value="-Xmx512m"/>
                                <jvmarg value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=9010"/>]]></replacevalue>
                                </replace>

                                <replace file="${tck.home}/bin/xml/ts.top.import.xml" unless:set="tck.suspend" >
                                  <replacetoken><![CDATA[<jvmarg value="-Xmx512m"/>
                                <jvmarg value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=9010"/>]]></replacetoken>
                                  <replacevalue><![CDATA[<jvmarg value="-Xmx512m"/>]]></replacevalue>
                                </replace>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>configure-tck-tests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                                         classpathref="maven.plugin.classpath" />
                                <limit maxwait="60">
                                    <exec executable="${glassfish.asadmin}" dir="${glassfish.home}/glassfish/bin" failonerror="true">
                                        <arg value="start-domain"/>
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>
                                </limit>

                                <!-- Deploy single test -->
                                <sequential if:set="run.test" >
                                    <dirname property="test.dir" file="${tck.home}/src/${run.test}"/>
                                    <echo>Deploying from ${test.dir}</echo>

                                    <exec executable="${ant.home}/bin/ant" dir="${test.dir}" failonerror="true">
                                        <arg value="deploy"  />
                                        <env key="AS_JAVA" value="${java.home}"/>
                                        <env key="JAVA_HOME" value="${java.home}"/>
                                    </exec>
                                </sequential>

                                <!-- Deploy all tests -->
                                <sequential unless:set="run.test" >
                                    <exec executable="${ant.home}/bin/ant" dir="${tck.tests.home}" failonerror="true">
                                        <arg value="deploy.all"  />
                                        <env key="AS_JAVA" value="${java.home}"/>
                                        <env key="JAVA_HOME" value="${java.home}"/>
                                    </exec>
                                </sequential>

                                <!-- Restart GlassFish in debug mode if so requested -->
                                <sequential if:set="glassfish.suspend">
                                    <exec executable="${glassfish.asadmin}" dir="${glassfish.home}/glassfish/bin" failonerror="true">
                                        <arg value="stop-domain" />
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>
                                    <echo message="Starting GlassFish in suspended mode, waiting on port 9009" />
                                    <exec executable="${glassfish.asadmin}" dir="${glassfish.home}/glassfish/bin" failonerror="true">
                                        <arg value="start-domain"/>
                                        <arg value="--suspend" if:set="glassfish.suspend"/>
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>
                                </sequential>
                            </target>
                        </configuration>
                    </execution>


                     <execution>
                        <id>run-tck-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                                         classpathref="maven.plugin.classpath" />

                                <echo level="info" message="Start running all tests" />
                                <exec executable="${ant.home}/bin/ant" dir="${tck.home}/bin" resultproperty="testResult">
                                    <arg value="-Dmultiple.tests=${run.test}" if:set="run.test" />
                                    <arg value="runclient.nobinaryfinder" if:set="run.test" />
                                    <arg value="run.all" unless:set="run.test" />
                                    <env key="AS_JAVA" value="${java.home}"/>
                                    <env key="JAVA_HOME" value="${java.home}"/>
                                    <env key="LC_ALL" value="C" />
                                </exec>

                                <exec executable="${glassfish.asadmin}" dir="${glassfish.home}/glassfish/bin">
                                    <arg value="stop-domain" />
                                    <env key="AS_JAVA" value="${java.home}"/>
                                </exec>

                                <if>
                                    <not>
                                        <equals arg1="${testResult}" arg2="0" />
                                    </not>
                                    <then>
                                        <echo message="Running tests failed." />
                                        <loadfile property="contents" srcFile="${glassfish.home}/glassfish/domains/domain1/logs/server.log" />
                                        <fail status="${testResult}" message="${contents}" />
                                    </then>
                                </if>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
