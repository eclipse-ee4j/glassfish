<?xml version="1.0" encoding="UTF-8"?>
<!--
 /*
 * Copyright (c) 2022, 2025 Contributors to the Eclipse Foundation.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ee4j</groupId>
        <artifactId>project</artifactId>
        <version>1.0.9</version>
        <relativePath />
    </parent>

    <artifactId>websocket-platform-extra-tck-run</artifactId>
    <version>11.0.0</version>
    <name>TCK: Run Jakarta websocket Extra TCK</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.release>17</maven.compiler.release>
    
        <glassfish.home>${glassfish.root}/glassfish8</glassfish.home>
        <glassfish.root>${project.build.directory}</glassfish.root>
        <glassfish.version>8.0.0-M9</glassfish.version>

        <tck.version>11.0.0</tck.version>
        <jakarta.tck.websocket.version>2.2.0</jakarta.tck.websocket.version>
        <tck.test.websocket.extra.version>${tck.version}</tck.test.websocket.extra.version>
        
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.9.3.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.10.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.websocket</groupId>
                <artifactId>jakarta.websocket-api</artifactId>
                <version>2.2.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>websocket-tck-common</artifactId>
            <version>${jakarta.tck.websocket.version}</version>
        </dependency>
        <!-- Contains com.sun.ts.tests.websocket.lib.implementation.sun.common.SunRIURL, but probably should not. -->
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>websocket-tck-spec-tests</artifactId>
            <version>${jakarta.tck.websocket.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>websocket-tck-platform-tests</artifactId>
            <version>${tck.test.websocket.extra.version}</version>
        </dependency>
        
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>common</artifactId>
            <version>11.0.0</version>
        </dependency>

        <!-- The Arquillian connector that starts GlassFish and deploys archives to it. -->
        <dependency>
            <groupId>org.omnifaces.arquillian</groupId>
            <artifactId>arquillian-glassfish-server-managed</artifactId>
            <version>1.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Client libs for doing HTTP requests, specifically done via the REST Client -->
        <dependency>
            <groupId>org.omnifaces.arquillian</groupId>
            <artifactId>glassfish-client-ee11</artifactId>
            <version>1.7.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Download and installation of the GlassFish server used for testing  -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-certificates</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>common</artifactId>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <includes>**/**cts_cert,**/**clientcert.jks,**/**clientcert.p12</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.glassfish.main.distributions</groupId>
                                    <artifactId>${glassfish-artifact-id}</artifactId>
                                    <version>${glassfish.version}</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${glassfish.root}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Configuring and running the TCK -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.5.2</version>
                <executions>
                    <execution>
                        <id>gf-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <argLine>
                                -Duser.language=en -Duser.country=US
                                -Djava.protocol.handler.pkgs=javax.net.ssl
                                -Djavax.net.ssl.keyStore=${project.build.directory}/certificates/clientcert.jks
                                -Djavax.net.ssl.keyStorePassword=changeit
                                -Djavax.net.ssl.trustStore=${glassfish.home}/glassfish/domains/domain1/config/cacerts.jks
                            </argLine>
                            
                            <dependenciesToScan>jakarta.tck:websocket-tck-platform-tests</dependenciesToScan>
                            <test>${run.test}</test>
                            
                            <systemPropertyVariables>
                                <glassfish.home>${glassfish.home}</glassfish.home>
                                <glassfish.postBootCommands>
                                    create-file-user --groups staff:mgr --passwordfile j2ee.pass j2ee
                                    create-file-user --groups guest --passwordfile javajoe.pass javajoe
                                </glassfish.postBootCommands>

                                <user>j2ee</user>
                                <password>j2ee</password>
                                <authuser>javajoe</authuser>
                                <authpassword>javajoe</authpassword>
                                <securedWebServicePort>8181</securedWebServicePort>

                                <ws_wait>5</ws_wait>
                                <lib.name>websockettck</lib.name>
                                <junit.log.traceflag>true</junit.log.traceflag>
                                <porting.ts.url.class.1>com.sun.ts.tests.websocket.lib.implementation.sun.common.SunRIURL</porting.ts.url.class.1>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>full</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <glassfish-artifact-id>glassfish</glassfish-artifact-id>
            </properties>
        </profile>

        <profile>
            <id>web</id>
            <properties>
                <glassfish-artifact-id>web</glassfish-artifact-id>
            </properties>
        </profile>
    </profiles>
</project>
